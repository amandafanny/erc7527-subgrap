specVersion: 1.0.0
description: Erc7527
repository: https://github.com/amandafanny/erc7527-subgraph.git
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: Factory
    network: mainnet
    source:
      address: "0x94691424e34aEBB03499072D93a3f024F519E87A"
      abi: Factory
      startBlock: 20189135
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.8
      language: wasm/assemblyscript
      entities:
        - Deploy
        - DotAgency
        - AgencyInstance
        - Currency
        - AppInstance
      abis:
        - name: Factory
          file: ./abis/Factory.json
        - name: Agency
          file: ./abis/Agency.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: Agent
          file: ./abis/Agent.json
      eventHandlers:
        - event: Deploy(address,indexed address,address,indexed address,indexed uint256)
          handler: handleDeploy
      file: ./src/factory.ts
  - kind: ethereum
    name: DotAgency
    network: mainnet
    source:
      address: "0x3DC3b756ec5E4EC9a5DEba49E2cBF8E21D276286"
      abi: DotAgency
      startBlock: 20197672
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.8
      language: wasm/assemblyscript
      entities:
        - DotAgency
        - Erc6551
        - Holder
      abis:
        - name: DotAgency
          file: ./abis/DotAgency.json
      eventHandlers:
        - event: Mint(indexed address,indexed uint256,indexed string,uint256)
          handler: handleMint
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
        - event: NewResolver(indexed bytes32,address)
          handler: handleNewResolver
        - event:
            ERC6551AccountCreated(address,indexed address,bytes32,uint256,indexed
            address,indexed uint256)
          handler: handleERC6551AccountCreated
      file: ./src/dot-agency.ts
  - kind: ethereum
    name: LPStaking
    network: mainnet
    source:
      address: "0xF9492aE19864c8ae91d55Ff274038c41928c37dB"
      abi: LPStaking
      startBlock: 20189132
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.8
      language: wasm/assemblyscript
      entities:
        - Currency
      abis:
        - name: LPStaking
          file: ./abis/LPStaking.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Deposit(indexed address,uint256)
          handler: handleDeposit
        - event: Withdraw(indexed address,uint256)
          handler: handleWithdraw
      callHandlers:
        - function: claim()
          handler: handleClaim
      file: ./src/lp-staking.ts
  - kind: ethereum
    name: DoubleLayerStaking
    network: mainnet
    source:
      address: "0x89EB45962E758E7603cfd843f1B563b97cB84dA8"
      abi: DoubleLayerStaking
      startBlock: 20354393
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.8
      language: wasm/assemblyscript
      entities:
        - DoubleLayerStakingL2
        - Agent
        - Currency
        - DoubleLayerCreatorAccount
        - DoubleLayerDotAgency
        - DoubleLayerStakingL2TokenIdRewardDebt
      abis:
        - name: DoubleLayerStaking
          file: ./abis/DoubleLayerStaking.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: Agency
          file: ./abis/Agency.json
      eventHandlers:
        - event: Stake(indexed address,indexed address,uint256)
          handler: handleStakeEvent
        - event: Unstake(indexed address,indexed address,uint256)
          handler: handleUnStakeEvent
      callHandlers:
        - function: stake(address,uint256)
          handler: handleStake
        - function: unstake(address,uint256)
          handler: handleUnstake
        - function: withdrawReward(address,uint256)
          handler: handleWithdrawReward
        - function: updateRewardL1(address)
          handler: handleUpdateRewardL1
        - function: updatePoolL2(address)
          handler: handleUpdatePoolL2
        - function: updateRewardL2(address)
          handler: handleUpdateRewardL2
        - function: claim(address)
          handler: handleClaimCreator
        - function: claim(uint256)
          handler: handleClaimDotAgency
        - function: exec(bytes4,bytes)
          handler: handleExec
        - function: forceUpdateRewardL1(address)
          handler: handleForceUpdateRewardL1
      file: ./src/staking.ts
  - kind: ethereum
    name: DoubleLayerStakingOld
    network: mainnet
    source:
      address: "0x95f6541c3CBD9bde97361441f6678A246C231Ca6"
      abi: DoubleLayerStaking
      startBlock: 20189136
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.8
      language: wasm/assemblyscript
      entities:
        - DoubleLayerStakingL2Old
        - Agent
        - Currency
        - DoubleLayerCreatorAccountOld
        - DoubleLayerDotAgencyOld
        - DoubleLayerStakingL2TokenIdRewardDebtOld
      abis:
        - name: DoubleLayerStaking
          file: ./abis/DoubleLayerStakingOld.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: Agency
          file: ./abis/Agency.json
      eventHandlers:
        - event: Stake(indexed address,indexed address,uint256)
          handler: handleStakeEvent
        - event: Unstake(indexed address,indexed address,uint256)
          handler: handleUnStakeEvent
      callHandlers:
        - function: stake(address,uint256)
          handler: handleStake
        - function: unstake(address,uint256)
          handler: handleUnstake
        - function: withdrawReward(address,uint256)
          handler: handleWithdrawReward
        - function: updateRewardL1(address)
          handler: handleUpdateRewardL1
        - function: updatePoolL2(address)
          handler: handleUpdatePoolL2
        - function: updateRewardL2(address)
          handler: handleUpdateRewardL2
        - function: claim(address)
          handler: handleClaimCreator
        - function: claim(uint256)
          handler: handleClaimDotAgency
        - function: exec(bytes4,bytes)
          handler: handleExec
      file: ./src/stakingOld.ts
  - kind: ethereum
    name: PremiumDAO
    network: mainnet
    source:
      address: "0xCE2D157c9F57181915c16B880bB70C49506aB6Fe"
      abi: PremiumDAO
      startBlock: 20189122
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.8
      language: wasm/assemblyscript
      entities:
        - PremiumDAO
        - Erc6551
        - Holder
      abis:
        - name: PremiumDAO
          file: ./abis/PremiumDAO.json
      eventHandlers:
        - event:
            ERC6551AccountCreated(address,indexed address,bytes32,uint256,indexed
            address,indexed uint256)
          handler: handleERC6551AccountCreated
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
      file: ./src/premium-dao.ts
  # - kind: ethereum
  #   name: PublicResolver
  #   network: mainnet
  #   source:
  #     address: "0x20Cdf90F79262d2139F3C179B99e74BA2979e5CE"
  #     abi: PublicResolver
  #     startBlock: 20197672
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.8
  #     language: wasm/assemblyscript
  #     entities:
  #       - Execute
  #     abis:
  #       - name: PublicResolver
  #         file: ./abis/PublicResolver.json
  #     eventHandlers:
  #       - event: TextChanged(indexed bytes32,indexed string,string,string)
  #         handler: handleTextChanged
  #     file: ./src/public-resolver.ts
  # - kind: ethereum
  #   name: DotAgencyResolver
  #   network: mainnet
  #   source:
  #     address: "0x6aCca1410C16FfDD60866be84b541492C2398C4e"
  #     abi: PublicResolver
  #     startBlock: 5939536
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.8
  #     language: wasm/assemblyscript
  #     entities:
  #       - Bond
  #     abis:
  #       - name: PublicResolver
  #         file: ./abis/PublicResolver.json
  #     eventHandlers:
  #       - event: TextChanged(indexed bytes32,indexed string,string,string)
  #         handler: handleTextChanged
  #     file: ./src/public-resolver.ts
templates:
  - name: Agent
    kind: ethereum/contract
    network: mainnet
    source:
      abi: Agent
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.8
      language: wasm/assemblyscript
      entities:
        - Agent
        - Erc6551
        - Holder
        - AgencyInstance
        - Currency
        - AppInstance
      abis:
        - name: Agent
          file: ./abis/Agent.json
        - name: Agency
          file: ./abis/Agency.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
        - event: NewResolver(indexed bytes32,address)
          handler: handleNewResolver
        - event:
            ERC6551AccountCreated(address,indexed address,bytes32,uint256,indexed
            address,indexed uint256)
          handler: handleERC6551AccountCreated
      file: ./src/agent.ts
  - name: Agency
    kind: ethereum/contract
    network: mainnet
    source:
      abi: Agency
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.8
      language: wasm/assemblyscript
      entities:
        - AgencyInstance
        - Agent
        - AgentActivity
      abis:
        - name: Agency
          file: ./abis/Agency.json
        - name: Agent
          file: ./abis/Agent.json
      eventHandlers:
        - event: Wrap(indexed address,indexed uint256,uint256,uint256)
          handler: handleWrap
        - event: Unwrap(indexed address,indexed uint256,uint256,uint256)
          handler: handleUnwrap
        # - event: Approve(indexed bytes4,indexed address,bytes)
        #   handler: handleApprove
        # - event: Cancel(indexed bytes4,indexed address,bytes)
        #   handler: handleCancel
        - event: ForceApprove(indexed bytes4,indexed address)
          handler: handleForceApprove
        - event: ForceCancel(indexed bytes4,indexed address)
          handler: handleForceCancel
        - event: RenounceForceApprove()
          handler: handleRenounceForceApprove
        - event: RenounceForceCancel()
          handler: handleRenounceForceCancel
      file: ./src/agency.ts
  - name: Erc6551
    kind: ethereum/contract
    network: mainnet
    source:
      abi: Erc6551
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.8
      language: wasm/assemblyscript
      entities:
        - Execute
      abis:
        - name: Erc6551
          file: ./abis/Erc6551.json
      callHandlers:
        - function: execute(address,uint256,bytes,uint8)
          handler: handleExecute
      file: ./src/erc6551.ts
